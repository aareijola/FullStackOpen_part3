{"version":3,"sources":["services/communication.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","Alert","NewPersonForm","addNewPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Persons","persons","removePerson","map","person","name","Person","number","onClick","FilterForm","filterText","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","notificationMessage","setNotificationMessage","alertMessage","setAlertMessage","personsToShow","toLowerCase","includes","useEffect","communication","event","target","preventDefault","undefined","find","returned","concat","setTimeout","catch","error","window","confirm","p","newPersonObject","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acf0b7d5.chunk.js","sourcesContent":["import axios  from \"axios\"\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n}\n  \nconst create = newObject => {\n    return axios.post(baseUrl, newObject).then(response => response.data)\n}\n  \nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n  \nexport default { \n    getAll,\n    create,\n    update,\n    remove\n}","import React, { useEffect, useState } from 'react'\nimport communication from './services/communication'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState(\"\")\n  const [ alertMessage, setAlertMessage] = useState(\"\")\n  const personsToShow = persons.filter((person) => person.name.toLowerCase().includes(filter.toLowerCase()))\n  \n  useEffect(() => {\n    communication.getAll().then(persons => setPersons(persons))\n  }, [])\n  \n  const handleNameChange  = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const removePerson = (person) => {\n    if (window.confirm(`Really delete ${person.name}?`)) {\n      communication.remove(person.id).then(() => {\n      setPersons(persons.filter((p) => p.id !== person.id))\n      setNotificationMessage(`Removed ${person.name}`)\n      setTimeout(() => setNotificationMessage(\"\"), 5000)\n    })\n    }\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    if (persons.find((person) => person.name === newName) === undefined) {\n      const newPersonObject = {\n        name : newName,\n        number : newNumber\n      }\n      communication.create(newPersonObject).then(returned => {\n        setPersons(persons.concat(returned))\n        setNotificationMessage(`Added ${returned.name}`)\n        setTimeout(() => setNotificationMessage(\"\"), 5000)\n        setNewName(\"\")\n        setNewNumber(\"\")\n      }).catch(error => {\n        setAlertMessage(error.response.data.error)\n        setTimeout(() => setAlertMessage(\"\"), 5000)\n      })\n    }\n    else {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(p => p.name === newName)\n        const newPersonObject = { ...person, number : newNumber}\n        communication.update(newPersonObject.id, newPersonObject).then((returned) => {\n          setPersons(persons.map(person => person.id !== newPersonObject.id ? person : newPersonObject))\n          setNotificationMessage(`Updated ${returned.name}`)\n          setTimeout(() => setNotificationMessage(\"\"), 5000)\n        }).catch(() => {\n          setAlertMessage(`Information of ${person.name} has already been removed from server`)\n          setTimeout(() => {setAlertMessage(\"\")}, 5000)\n          communication.getAll().then(persons => setPersons(persons))\n        })\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message = {notificationMessage}/>\n      <Alert message = {alertMessage}/>\n      <FilterForm filterText = {filter} onChange = {handleFilterChange}/>\n      <h1>Add new</h1>\n      <NewPersonForm addNewPerson = {addNewPerson} newName = {newName} handleNameChange = {handleNameChange} newNumber = {newNumber} handleNumberChange = {handleNumberChange} />\n      <h1>Numbers</h1>\n      <Persons persons = {personsToShow} removePerson = {removePerson}/>\n    </div>\n  )\n}\n\nconst Notification = ({message}) => {\n  if (message === \"\") {\n    return null\n  }\n  return (\n    <div className = \"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst Alert = ({message}) => {\n  if (message === \"\") {\n    return null\n  }\n  return (\n    <div className = \"alert\">\n      {message}\n    </div>\n  )\n}\n\nconst NewPersonForm = ({addNewPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit = {addNewPerson}>\n      <div>\n        name: <input value = {newName} onChange = {handleNameChange} />\n      </div>\n      <div> \n        number: <input value = {newNumber} onChange = {handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({persons, removePerson}) => {\n  return <div>{ persons.map(person => <Person person = {person} key = {person.name} removePerson = {removePerson}/>) }</div>\n}\n\nconst Person = ({person, removePerson}) => {\n  return <div>{person.name} {person.number} <button onClick = {() => removePerson(person)}>delete</button> </div>\n}\n\nconst FilterForm = ({filterText, onChange}) => {\n  return (\n    <div>\n      filter shown with <input value = {filterText} onChange = {onChange} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}